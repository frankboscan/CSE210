public class Activity{
	protected string _name;
	protected string _description;
	protected int _duration;

	public void DisplayStartingMessage(){
		Console.Clear();
		Console.WriteLine($"Welcome to the {_name}.\n{_description}\n");
		Console.Write("Activity length, seconds: ");
		_duration = int.Parse(Console.ReadLine());
		Console.Clear();
		Console.WriteLine("Prepare to begin!");
		Spinner(3);
		Console.WriteLine();
	}

	public void DisplayEndingMessage(){
		Console.WriteLine($"Done! Good job!");
		Spinner(3);
		Console.WriteLine($"\nYou did the {_name} for {_duration} seconds.");
	}

	public void Spinner(double time = 3.0){
		List<char> chars = new List<char>{'|', '/', '-', '\\'};
		for (double i = 0.0; i < time; i += .25){
			Console.Write($"\b{chars[(int)(i * 4) % 4]}");
			Thread.Sleep(250);
		}
	}
			
}
public class BreathingActivity : Activity{
	public BreathingActivity(){
		_name = "Breathing Activity";
		_description = "This activity will help you relax by walking your through breathing in and out slowly. Clear your mind and focus on your breathing.";
		_duration = 0;
	}

        public void Breathe(int time = 3){
                for (int i = 0; i < time; i++){
                        Thread.Sleep(1000);
                        Console.WriteLine();
			if (i % 4 == 0 && time != 3)
				Console.WriteLine("Breath in...");
			if (i % 4 == 2 && time != 3)
				Console.WriteLine("Breath out...");
                }
                Console.WriteLine();
        }

	public void Run(){
		DisplayStartingMessage();
		Breathe(_duration);
		DisplayEndingMessage();
	}
}	
public class ListingActivity : Activity{
	public ListingActivity(){
                _name = "Listing Activity";
                _description = "This activity will help you reflect on the good things in your life by having you list as many things as you can in a certain area.";
                _duration = 0;
        }

	public void Pause(int time = 3){
                for (int i = 0; i < time; i++){
                        Thread.Sleep(1000);
                        Console.WriteLine(" -");
                }
        }

        public void Run(){
                DisplayStartingMessage();
		DisplayRandomPrompt();
                Console.WriteLine("\nThink about the question for a few seconds.");
		Pause(5000);
		Console.WriteLine("Keep listing items: ");
                DisplayEndingMessage();
        }

	public void DisplayRandomPrompt(){
		List<string> prompts = new List<string>{
			"Who are people that you appreciate?",
			"What are personal strengths of yours?",
			"Who are people that you have helped this week?",
			"When have you felt the Holy Ghost this month?",
			"Who are some of your personal heroes?"
		};
		Random random = new Random();
		Console.WriteLine(prompts[random.Next(0, prompts.Count)]);
	}

	
}
using System;

class Program{
    static void Main(string[] args){
        Console.WriteLine("Menu options:");
	Console.WriteLine("\t1. Breathing\n\t2. Reflection\n\t3. Listing\n\t4. Quit");
        Console.WriteLine("Select a choice from the menu:");
	switch (int.Parse(Console.ReadLine())){
		case 1:
			BreathingActivity breathing = new BreathingActivity();
			breathing.Run();
			break;
                case 2:
                        ReflectingActivity reflecting = new ReflectingActivity();
                        reflecting.Run();
                        break;

		case 3:
			ListingActivity listing = new ListingActivity();
			listing.Run();
			break;
		default:
			Console.WriteLine("Invalid option.");
			break;
	}
    }
}
public class ReflectingActivity : Activity{
	public ReflectingActivity(){
		_name = "Reflecting Activity";
		_description = "This activity will help you reflect on times in your life when you have shown strength and resilience. This will help you recognize the power you have and how you can use it in other aspects of your life.";
		_duration = 0;
	}

	public void Run(){
		DisplayStartingMessage();
		DisplayRandomPrompt();
		DisplayRandomQuestions();
		DisplayEndingMessage();
	}

	public void DisplayRandomPrompt(){
		List<string> prompts = new List<string>{
			"Think of a time when you stood up for someone else.",
			"Think of a time when you did something really difficult.",
			"Think of a time when you helped someone in need.",
			"Think of a time when you did something truly selfless.",
		};
		Random random = new Random();
		Console.WriteLine(prompts[random.Next(0, prompts.Count)]);
	}

        public void DisplayRandomQuestions(){
                List<string> questions = new List<string>{
			"Why was this experience meaningful to you?",
			"Have you ever done anything like this before?",
			"How did you get started?",
			"How did you feel when it was complete?",
			"What made this time different than other times when you were not as successful?",
			"What is your favorite thing about this experience?",
			"What could you learn from this experience that applies to other situations?",
			"What did you learn about yourself through this experience?",
			"How can you keep this experience in mind in the future?",
		};
		Random random = new Random();
		List<int> indeces = new List<int>();
		List<int> randomIndeces = new List<int>();
		for (int i = 0; i < questions.Count; indeces[i] = i, i++);
		for (int i = 0; i < questions.Count; i++){
			int a = random.Next(0, indeces.Count);
			indeces.RemoveAt(a);
			randomIndeces.Add(a);
		}
		Console.Clear();
		for (int i = 0; i < _duration && i < 90; i++){
			Console.WriteLine(questions[randomIndeces[i / 10]]);
			Spinner(10);
		}
	}
}
public class Activity{
	protected string _name;
	protected string _description;
	protected int _duration;

	public void DisplayStartingMessage(){
		Console.Clear();
		Console.WriteLine($"Welcome to the {_name}.\n{_description}\n");
		Console.Write("Activity length, seconds: ");
		_duration = int.Parse(Console.ReadLine());
		Console.Clear();
		Console.WriteLine("Prepare to begin!");
		Spinner(3);
		Console.WriteLine();
	}

	public void DisplayEndingMessage(){
		Console.WriteLine($"Done! Good job!");
		Spinner(3);
		Console.WriteLine($"\nYou did the {_name} for {_duration} seconds.");
	}

	public void Spinner(double time = 3.0){
		List<char> chars = new List<char>{'|', '/', '-', '\\'};
		for (double i = 0.0; i < time; i += .25){
			Console.Write($"\b{chars[(int)(i * 4) % 4]}");
			Thread.Sleep(250);
			Console.Write("\b");
		}
	}
			
}
public class BreathingActivity : Activity{
	public BreathingActivity(){
		_name = "Breathing Activity";
		_description = "This activity will help you relax by walking your through breathing in and out slowly. Clear your mind and focus on your breathing.";
		_duration = 0;
	}

        public void Breathe(int time = 3){
                for (int i = 0; i < time; i++){
                        Thread.Sleep(1000);
                        Console.WriteLine();
			if (i % 4 == 0 && time != 3)
				Console.WriteLine("Breath in...");
			if (i % 4 == 2 && time != 3)
				Console.WriteLine("Breath out...");
                }
                Console.WriteLine();
        }

	public void Run(){
		DisplayStartingMessage();
		Breathe(_duration);
		DisplayEndingMessage();
	}
}	
public class ListingActivity : Activity{
	public ListingActivity(){
                _name = "Listing Activity";
                _description = "This activity will help you reflect on the good things in your life by having you list as many things as you can in a certain area.";
                _duration = 0;
        }

	public void Pause(int time = 3){
                for (int i = 0; i < time; i++){
                        Thread.Sleep(1000);
                        Console.WriteLine(" -");
                }
        }

        public void Run(){
                DisplayStartingMessage();
		DisplayRandomPrompt();
                Console.WriteLine("\nThink about the question for a few seconds.");
		Pause(5000);
		Console.WriteLine("Keep listing items: ");
                DisplayEndingMessage();
        }

	public void DisplayRandomPrompt(){
		List<string> prompts = new List<string>{
			"Who are people that you appreciate?",
			"What are personal strengths of yours?",
			"Who are people that you have helped this week?",
			"When have you felt the Holy Ghost this month?",
			"Who are some of your personal heroes?"
		};
		Random random = new Random();
		Console.WriteLine(prompts[random.Next(0, prompts.Count)]);
	}

	
}
using System;

class Program{
    static void Main(string[] args){
        Console.WriteLine("Menu options:");
	Console.WriteLine("\t1. Breathing\n\t2. Reflection\n\t3. Listing\n\t4. Quit");
        Console.WriteLine("Select a choice from the menu:");
	switch (int.Parse(Console.ReadLine())){
		case 1:
			BreathingActivity breathing = new BreathingActivity();
			breathing.Run();
			break;
                case 2:
                        ReflectingActivity reflecting = new ReflectingActivity();
                        reflecting.Run();
                        break;

		case 3:
			ListingActivity listing = new ListingActivity();
			listing.Run();
			break;
		default:
			Console.WriteLine("Invalid option.");
			break;
	}
    }
}
public class ReflectingActivity : Activity{
	public ReflectingActivity(){
		_name = "Reflecting Activity";
		_description = "This activity will help you reflect on times in your life when you have shown strength and resilience. This will help you recognize the power you have and how you can use it in other aspects of your life.";
		_duration = 0;
	}

	public void Run(){
		DisplayStartingMessage();
		DisplayRandomPrompt();
		DisplayRandomQuestions();
		DisplayEndingMessage();
	}

	public void DisplayRandomPrompt(){
		List<string> prompts = new List<string>{
			"Think of a time when you stood up for someone else.",
			"Think of a time when you did something really difficult.",
			"Think of a time when you helped someone in need.",
			"Think of a time when you did something truly selfless.",
		};
		Random random = new Random();
		Console.WriteLine(prompts[random.Next(0, prompts.Count)]);
	}

        public void DisplayRandomQuestions(){
                List<string> questions = new List<string>{
			"Why was this experience meaningful to you?",
			"Have you ever done anything like this before?",
			"How did you get started?",
			"How did you feel when it was complete?",
			"What made this time different than other times when you were not as successful?",
			"What is your favorite thing about this experience?",
			"What could you learn from this experience that applies to other situations?",
			"What did you learn about yourself through this experience?",
			"How can you keep this experience in mind in the future?",
		};
		Random random = new Random();
		List<int> indeces = new List<int>();
		List<int> randomIndeces = new List<int>();
		for (int i = 0; i < questions.Count; i++)
			indeces.Add(i);
		for (int i = 0; i < questions.Count; i++){
			int a = random.Next(0, indeces.Count);
			indeces.RemoveAt(a);
			randomIndeces.Add(a);
		}
		Console.Clear();
		for (int i = 0; i < _duration && i < 90; i += 10){
			Console.WriteLine("\n" + questions[randomIndeces[i / 10]]);
			Spinner(10);
			Console.WriteLine("\b");
		}
	}
}
public class Activity{
	protected string _name;
	protected string _description;
	protected int _duration;

	public void DisplayStartingMessage(){
		Console.Clear();
		Console.WriteLine($"Welcome to the {_name}.\n{_description}\n");
		Console.Write("Activity length, seconds: ");
		_duration = int.Parse(Console.ReadLine());
		Console.Clear();
		Console.WriteLine("Prepare to begin!");
		Spinner(3);
		Console.WriteLine();
	}

	public void DisplayEndingMessage(){
		Console.WriteLine($"Done! Good job!");
		Spinner(3);
		Console.WriteLine($"\nYou did the {_name} for {_duration} seconds.");
	}

	public void Spinner(double time = 3.0){
		List<char> chars = new List<char>{'|', '/', '-', '\\'};
		for (double i = 0.0; i < time; i += .25){
			Console.Write($"\b{chars[(int)(i * 4) % 4]}");
			Thread.Sleep(250);
			Console.Write("\b \b");
		}
	}
			
}
public class BreathingActivity : Activity{
	public BreathingActivity(){
		_name = "Breathing Activity";
		_description = "This activity will help you relax by walking your through breathing in and out slowly. Clear your mind and focus on your breathing.";
		_duration = 0;
	}

        public void Breathe(int time = 3){
                for (int i = 0; i < time; i++){
                        Thread.Sleep(1000);
                        Console.WriteLine();
			if (i % 4 == 0 && time != 3)
				Console.WriteLine("Breath in...");
			if (i % 4 == 2 && time != 3)
				Console.WriteLine("Breath out...");
                }
                Console.WriteLine();
        }

	public void Run(){
		DisplayStartingMessage();
		Breathe(_duration);
		DisplayEndingMessage();
	}
}	
public class ListingActivity : Activity{
	public ListingActivity(){
                _name = "Listing Activity";
                _description = "This activity will help you reflect on the good things in your life by having you list as many things as you can in a certain area.";
                _duration = 0;
        }

	public void Pause(int time = 3){
                for (int i = 0; i < time; i++){
                        Thread.Sleep(1000);
                        Console.Write($"\b{time - i - 1}");
                }
        }

        public void Run(){
                DisplayStartingMessage();
		DisplayRandomPrompt();
                Console.WriteLine("\nThink about the question for a few seconds.");
		Pause(5);
		Console.WriteLine("\bKeep listing items: ");
                DisplayEndingMessage();
        }

	public void DisplayRandomPrompt(){
		List<string> prompts = new List<string>{
			"Who are people that you appreciate?",
			"What are personal strengths of yours?",
			"Who are people that you have helped this week?",
			"When have you felt the Holy Ghost this month?",
			"Who are some of your personal heroes?"
		};
		Random random = new Random();
		Console.WriteLine(prompts[random.Next(0, prompts.Count)]);
	}

	
}
using System;

class Program{
    static void Main(string[] args){
        Console.WriteLine("Menu options:");
	Console.WriteLine("\t1. Breathing\n\t2. Reflection\n\t3. Listing\n\t4. Quit");
        Console.WriteLine("Select a choice from the menu:");
	switch (int.Parse(Console.ReadLine())){
		case 1:
			BreathingActivity breathing = new BreathingActivity();
			breathing.Run();
			break;
                case 2:
                        ReflectingActivity reflecting = new ReflectingActivity();
                        reflecting.Run();
                        break;

		case 3:
			ListingActivity listing = new ListingActivity();
			listing.Run();
			break;
		default:
			Console.WriteLine("Invalid option.");
			break;
	}
    }
}
public class ReflectingActivity : Activity{
	public ReflectingActivity(){
		_name = "Reflecting Activity";
		_description = "This activity will help you reflect on times in your life when you have shown strength and resilience. This will help you recognize the power you have and how you can use it in other aspects of your life.";
		_duration = 0;
	}

	public void Run(){
		DisplayStartingMessage();
		DisplayRandomPrompt();
		DisplayRandomQuestions();
		DisplayEndingMessage();
	}

	public void DisplayRandomPrompt(){
		List<string> prompts = new List<string>{
			"Think of a time when you stood up for someone else.",
			"Think of a time when you did something really difficult.",
			"Think of a time when you helped someone in need.",
			"Think of a time when you did something truly selfless.",
		};
		Random random = new Random();
		Console.WriteLine(prompts[random.Next(0, prompts.Count)]);
	}

        public void DisplayRandomQuestions(){
                List<string> questions = new List<string>{
			"Why was this experience meaningful to you?",
			"Have you ever done anything like this before?",
			"How did you get started?",
			"How did you feel when it was complete?",
			"What made this time different than other times when you were not as successful?",
			"What is your favorite thing about this experience?",
			"What could you learn from this experience that applies to other situations?",
			"What did you learn about yourself through this experience?",
			"How can you keep this experience in mind in the future?",
		};
		Random random = new Random();
		List<int> indeces = new List<int>();
		List<int> randomIndeces = new List<int>();
		for (int i = 0; i < questions.Count; i++)
			indeces.Add(i);
		for (int i = 0; i < questions.Count; i++){
			int a = random.Next(0, indeces.Count);
			indeces.RemoveAt(a);
			randomIndeces.Add(a);
		}
		Console.Clear();
		for (int i = 0; i < _duration && i < 90; i += 10){
			Console.WriteLine("\n" + questions[randomIndeces[i / 10]]);
			Spinner(10);
			Console.WriteLine("\b");
		}
	}
}
public class Activity{
	protected string _name;
	protected string _description;
	protected int _duration;

	public void DisplayStartingMessage(){
		Console.Clear();
		Console.WriteLine($"Welcome to the {_name}.\n{_description}\n");
		Console.Write("Activity length, seconds: ");
		_duration = int.Parse(Console.ReadLine());
		Console.Clear();
		Console.WriteLine("Prepare to begin!");
		Spinner(3);
		Console.WriteLine();
	}

	public void DisplayEndingMessage(){
		Console.WriteLine($"Done! Good job!");
		Spinner(3);
		Console.WriteLine($"\nYou did the {_name} for {_duration} seconds.");
	}

	public void Spinner(double time = 3.0){
		List<char> chars = new List<char>{'|', '/', '-', '\\'};
		for (double i = 0.0; i < time; i += .25){
			Console.Write($"\b{chars[(int)(i * 4) % 4]}");
			Thread.Sleep(250);
			Console.Write("\b \b");
		}
	}
			
}
public class BreathingActivity : Activity{
	public BreathingActivity(){
		_name = "Breathing Activity";
		_description = "This activity will help you relax by walking your through breathing in and out slowly. Clear your mind and focus on your breathing.";
		_duration = 0;
	}

        public void Breathe(int time = 3){
                for (int i = 0; i < time; i++){
                        Thread.Sleep(1000);
                        Console.WriteLine();
			if (i % 4 == 0 && time != 3)
				Console.WriteLine("Breath in...");
			if (i % 4 == 2 && time != 3)
				Console.WriteLine("Breath out...");
                }
                Console.WriteLine();
        }

	public void Run(){
		DisplayStartingMessage();
		Breathe(_duration);
		DisplayEndingMessage();
	}
}	
public class ListingActivity : Activity{
	public ListingActivity(){
                _name = "Listing Activity";
                _description = "This activity will help you reflect on the good things in your life by having you list as many things as you can in a certain area.";
                _duration = 0;
        }

	public void Countdown(int time = 3){
                for (int i = 0; i < time; i++){
                        Thread.Sleep(1000);
                        Console.Write($"\b{time - i - 1}");
                }
        }

        public void Run(){
                DisplayStartingMessage();
		DisplayRandomPrompt();
                Console.WriteLine("\nThink about the question for a few seconds.");
		Countdown(5);
		Console.WriteLine("\bList as many items as you can: ");
		List<string> answers = new List<string>();
		DateTime endTime = DateTime.Now.AddSeconds(_duration);
		while (endTime < DateTime.Now){
			Console.Write("> ");
			answers.add(Console.ReadLine());
		}
		Console.WriteLine($"Well done: you listed {answers.Count} items.");
                DisplayEndingMessage();
        }

	public void DisplayRandomPrompt(){
		List<string> prompts = new List<string>{
			"Who are people that you appreciate?",
			"What are personal strengths of yours?",
			"Who are people that you have helped this week?",
			"When have you felt the Holy Ghost this month?",
			"Who are some of your personal heroes?"
		};
		Random random = new Random();
		Console.WriteLine(prompts[random.Next(0, prompts.Count)]);
	}

	
}
using System;

class Program{
    static void Main(string[] args){
        Console.WriteLine("Menu options:");
	Console.WriteLine("\t1. Breathing\n\t2. Reflection\n\t3. Listing\n\t4. Quit");
        Console.WriteLine("Select a choice from the menu:");
	switch (int.Parse(Console.ReadLine())){
		case 1:
			BreathingActivity breathing = new BreathingActivity();
			breathing.Run();
			break;
                case 2:
                        ReflectingActivity reflecting = new ReflectingActivity();
                        reflecting.Run();
                        break;

		case 3:
			ListingActivity listing = new ListingActivity();
			listing.Run();
			break;
		default:
			Console.WriteLine("Invalid option.");
			break;
	}
    }
}
public class ReflectingActivity : Activity{
	public ReflectingActivity(){
		_name = "Reflecting Activity";
		_description = "This activity will help you reflect on times in your life when you have shown strength and resilience. This will help you recognize the power you have and how you can use it in other aspects of your life.";
		_duration = 0;
	}

	public void Run(){
		DisplayStartingMessage();
		DisplayRandomPrompt();
		DisplayRandomQuestions();
		DisplayEndingMessage();
	}

	public void DisplayRandomPrompt(){
		List<string> prompts = new List<string>{
			"Think of a time when you stood up for someone else.",
			"Think of a time when you did something really difficult.",
			"Think of a time when you helped someone in need.",
			"Think of a time when you did something truly selfless.",
		};
		Random random = new Random();
		Console.WriteLine(prompts[random.Next(0, prompts.Count)]);
	}

        public void DisplayRandomQuestions(){
                List<string> questions = new List<string>{
			"Why was this experience meaningful to you?",
			"Have you ever done anything like this before?",
			"How did you get started?",
			"How did you feel when it was complete?",
			"What made this time different than other times when you were not as successful?",
			"What is your favorite thing about this experience?",
			"What could you learn from this experience that applies to other situations?",
			"What did you learn about yourself through this experience?",
			"How can you keep this experience in mind in the future?",
		};
		Random random = new Random();
		List<int> indeces = new List<int>();
		List<int> randomIndeces = new List<int>();
		for (int i = 0; i < questions.Count; i++)
			indeces.Add(i);
		for (int i = 0; i < questions.Count; i++){
			int a = random.Next(0, indeces.Count);
			indeces.RemoveAt(a);
			randomIndeces.Add(a);
		}
		Console.Clear();
		for (int i = 0; i < _duration && i < 90; i += 10){
			Console.WriteLine("\n" + questions[randomIndeces[i / 10]]);
			Spinner(10);
			Console.WriteLine("\b");
		}
	}
}
public class Activity{
	protected string _name;
	protected string _description;
	protected int _duration;

	public void DisplayStartingMessage(){
		Console.Clear();
		Console.WriteLine($"Welcome to the {_name}.\n{_description}\n");
		Console.Write("Activity length, seconds: ");
		_duration = int.Parse(Console.ReadLine());
		Console.Clear();
		Console.WriteLine("Prepare to begin!");
		Spinner(3);
		Console.WriteLine();
	}

	public void DisplayEndingMessage(){
		Console.WriteLine($"Done! Good job!");
		Spinner(3);
		Console.WriteLine($"\nYou did the {_name} for {_duration} seconds.");
	}

	public void Spinner(double time = 3.0){
		List<char> chars = new List<char>{'|', '/', '-', '\\'};
		for (double i = 0.0; i < time; i += .25){
			Console.Write($"\b{chars[(int)(i * 4) % 4]}");
			Thread.Sleep(250);
			Console.Write("\b \b");
		}
	}
			
}
public class BreathingActivity : Activity{
	public BreathingActivity(){
		_name = "Breathing Activity";
		_description = "This activity will help you relax by walking your through breathing in and out slowly. Clear your mind and focus on your breathing.";
		_duration = 0;
	}

        public void Breathe(int time = 3){
                for (int i = 0; i < time; i++){
                        Thread.Sleep(1000);
                        Console.WriteLine();
			if (i % 4 == 0 && time != 3)
				Console.WriteLine("Breath in...");
			if (i % 4 == 2 && time != 3)
				Console.WriteLine("Breath out...");
                }
                Console.WriteLine();
        }

	public void Run(){
		DisplayStartingMessage();
		Breathe(_duration);
		DisplayEndingMessage();
	}
}	
public class ListingActivity : Activity{
	public ListingActivity(){
                _name = "Listing Activity";
                _description = "This activity will help you reflect on the good things in your life by having you list as many things as you can in a certain area.";
                _duration = 0;
        }

	public void Countdown(int time = 3){
                for (int i = 0; i < time; i++){
                        Thread.Sleep(1000);
                        Console.Write($"\b{time - i - 1}");
                }
        }

        public void Run(){
                DisplayStartingMessage();
		DisplayRandomPrompt();
                Console.WriteLine("\nThink about the question for a few seconds.");
		Countdown(5);
		Console.WriteLine("\bList as many items as you can: ");
		List<string> answers = new List<string>();
		DateTime endTime = DateTime.Now.AddSeconds(_duration);
		while (endTime < DateTime.Now){
			Console.Write("> ");
			answers.Add(Console.ReadLine());
		}
		Console.WriteLine($"Well done: you listed {answers.Count} items.");
                DisplayEndingMessage();
        }

	public void DisplayRandomPrompt(){
		List<string> prompts = new List<string>{
			"Who are people that you appreciate?",
			"What are personal strengths of yours?",
			"Who are people that you have helped this week?",
			"When have you felt the Holy Ghost this month?",
			"Who are some of your personal heroes?"
		};
		Random random = new Random();
		Console.WriteLine(prompts[random.Next(0, prompts.Count)]);
	}

	
}
using System;

class Program{
    static void Main(string[] args){
        Console.WriteLine("Menu options:");
	Console.WriteLine("\t1. Breathing\n\t2. Reflection\n\t3. Listing\n\t4. Quit");
        Console.WriteLine("Select a choice from the menu:");
	switch (int.Parse(Console.ReadLine())){
		case 1:
			BreathingActivity breathing = new BreathingActivity();
			breathing.Run();
			break;
                case 2:
                        ReflectingActivity reflecting = new ReflectingActivity();
                        reflecting.Run();
                        break;

		case 3:
			ListingActivity listing = new ListingActivity();
			listing.Run();
			break;
		default:
			Console.WriteLine("Invalid option.");
			break;
	}
    }
}
public class ReflectingActivity : Activity{
	public ReflectingActivity(){
		_name = "Reflecting Activity";
		_description = "This activity will help you reflect on times in your life when you have shown strength and resilience. This will help you recognize the power you have and how you can use it in other aspects of your life.";
		_duration = 0;
	}

	public void Run(){
		DisplayStartingMessage();
		DisplayRandomPrompt();
		DisplayRandomQuestions();
		DisplayEndingMessage();
	}

	public void DisplayRandomPrompt(){
		List<string> prompts = new List<string>{
			"Think of a time when you stood up for someone else.",
			"Think of a time when you did something really difficult.",
			"Think of a time when you helped someone in need.",
			"Think of a time when you did something truly selfless.",
		};
		Random random = new Random();
		Console.WriteLine(prompts[random.Next(0, prompts.Count)]);
	}

        public void DisplayRandomQuestions(){
                List<string> questions = new List<string>{
			"Why was this experience meaningful to you?",
			"Have you ever done anything like this before?",
			"How did you get started?",
			"How did you feel when it was complete?",
			"What made this time different than other times when you were not as successful?",
			"What is your favorite thing about this experience?",
			"What could you learn from this experience that applies to other situations?",
			"What did you learn about yourself through this experience?",
			"How can you keep this experience in mind in the future?",
		};
		Random random = new Random();
		List<int> indeces = new List<int>();
		List<int> randomIndeces = new List<int>();
		for (int i = 0; i < questions.Count; i++)
			indeces.Add(i);
		for (int i = 0; i < questions.Count; i++){
			int a = random.Next(0, indeces.Count);
			indeces.RemoveAt(a);
			randomIndeces.Add(a);
		}
		Console.Clear();
		for (int i = 0; i < _duration && i < 90; i += 10){
			Console.WriteLine("\n" + questions[randomIndeces[i / 10]]);
			Spinner(10);
			Console.WriteLine("\b");
		}
	}
}
public class Activity{
	protected string _name;
	protected string _description;
	protected int _duration;

	public void DisplayStartingMessage(){
		Console.Clear();
		Console.WriteLine($"Welcome to the {_name}.\n{_description}\n");
		Console.Write("Activity length, seconds: ");
		_duration = int.Parse(Console.ReadLine());
		Console.Clear();
		Console.WriteLine("Prepare to begin!");
		Spinner(3);
		Console.WriteLine();
	}

	public void DisplayEndingMessage(){
		Console.WriteLine($"Done! Good job!");
		Spinner(3);
		Console.WriteLine($"\nYou did the {_name} for {_duration} seconds.");
	}

	public void Spinner(double time = 3.0){
		List<char> chars = new List<char>{'|', '/', '-', '\\'};
		for (double i = 0.0; i < time; i += .25){
			Console.Write($"\b{chars[(int)(i * 4) % 4]}");
			Thread.Sleep(250);
			Console.Write("\b \b");
		}
	}
			
}
public class BreathingActivity : Activity{
	public BreathingActivity(){
		_name = "Breathing Activity";
		_description = "This activity will help you relax by walking your through breathing in and out slowly. Clear your mind and focus on your breathing.";
		_duration = 0;
	}

        public void Breathe(int time = 3){
                for (int i = 0; i < time; i++){
                        Thread.Sleep(1000);
                        Console.WriteLine();
			if (i % 4 == 0 && time != 3)
				Console.WriteLine("Breath in...");
			if (i % 4 == 2 && time != 3)
				Console.WriteLine("Breath out...");
                }
                Console.WriteLine();
        }

	public void Run(){
		DisplayStartingMessage();
		Breathe(_duration);
		DisplayEndingMessage();
	}
}	
public class ListingActivity : Activity{
	public ListingActivity(){
                _name = "Listing Activity";
                _description = "This activity will help you reflect on the good things in your life by having you list as many things as you can in a certain area.";
                _duration = 0;
        }

	public void Countdown(int time = 3){
                for (int i = 0; i < time; i++){
                        Thread.Sleep(1000);
                        Console.Write($"\b{time - i - 1}");
                }
        }

        public void Run(){
                DisplayStartingMessage();
		DisplayRandomPrompt();
                Console.WriteLine("\nThink about the question for a few seconds.");
		Countdown(5);
		Console.WriteLine("\bList as many items as you can: ");
		List<string> answers = new List<string>();
		DateTime endTime = DateTime.Now.AddSeconds(_duration);
		while (DateTime.Now < endTime){
			Console.Write("> ");
			answers.Add(Console.ReadLine());
		}
		Console.WriteLine($"Well done: you listed {answers.Count} items.");
                DisplayEndingMessage();
        }

	public void DisplayRandomPrompt(){
		List<string> prompts = new List<string>{
			"Who are people that you appreciate?",
			"What are personal strengths of yours?",
			"Who are people that you have helped this week?",
			"When have you felt the Holy Ghost this month?",
			"Who are some of your personal heroes?"
		};
		Random random = new Random();
		Console.WriteLine(prompts[random.Next(0, prompts.Count)]);
	}

	
}
using System;

class Program{
    static void Main(string[] args){
        Console.WriteLine("Menu options:");
	Console.WriteLine("\t1. Breathing\n\t2. Reflection\n\t3. Listing\n\t4. Quit");
        Console.WriteLine("Select a choice from the menu:");
	switch (int.Parse(Console.ReadLine())){
		case 1:
			BreathingActivity breathing = new BreathingActivity();
			breathing.Run();
			break;
                case 2:
                        ReflectingActivity reflecting = new ReflectingActivity();
                        reflecting.Run();
                        break;

		case 3:
			ListingActivity listing = new ListingActivity();
			listing.Run();
			break;
		default:
			Console.WriteLine("Invalid option.");
			break;
	}
    }
}
public class ReflectingActivity : Activity{
	public ReflectingActivity(){
		_name = "Reflecting Activity";
		_description = "This activity will help you reflect on times in your life when you have shown strength and resilience. This will help you recognize the power you have and how you can use it in other aspects of your life.";
		_duration = 0;
	}

	public void Run(){
		DisplayStartingMessage();
		DisplayRandomPrompt();
		DisplayRandomQuestions();
		DisplayEndingMessage();
	}

	public void DisplayRandomPrompt(){
		List<string> prompts = new List<string>{
			"Think of a time when you stood up for someone else.",
			"Think of a time when you did something really difficult.",
			"Think of a time when you helped someone in need.",
			"Think of a time when you did something truly selfless.",
		};
		Random random = new Random();
		Console.WriteLine(prompts[random.Next(0, prompts.Count)]);
	}

        public void DisplayRandomQuestions(){
                List<string> questions = new List<string>{
			"Why was this experience meaningful to you?",
			"Have you ever done anything like this before?",
			"How did you get started?",
			"How did you feel when it was complete?",
			"What made this time different than other times when you were not as successful?",
			"What is your favorite thing about this experience?",
			"What could you learn from this experience that applies to other situations?",
			"What did you learn about yourself through this experience?",
			"How can you keep this experience in mind in the future?",
		};
		Random random = new Random();
		List<int> indeces = new List<int>();
		List<int> randomIndeces = new List<int>();
		for (int i = 0; i < questions.Count; i++)
			indeces.Add(i);
		for (int i = 0; i < questions.Count; i++){
			int a = random.Next(0, indeces.Count);
			indeces.RemoveAt(a);
			randomIndeces.Add(a);
		}
		Console.Clear();
		for (int i = 0; i < _duration && i < 90; i += 10){
			Console.WriteLine("\n" + questions[randomIndeces[i / 10]]);
			Spinner(10);
			Console.WriteLine("\b");
		}
	}
}
public class Activity{
	protected string _name;
	protected string _description;
	protected int _duration;

	public void DisplayStartingMessage(){
		Console.Clear();
		Console.WriteLine($"Welcome to the {_name}.\n{_description}\n");
		Console.Write("Activity length, seconds: ");
		_duration = int.Parse(Console.ReadLine());
		Console.Clear();
		Console.WriteLine("Prepare to begin!");
		Spinner(3);
		Console.WriteLine();
	}

	public void DisplayEndingMessage(){
		Console.WriteLine($"Done! Good job!");
		Spinner(3);
		Console.WriteLine($"\nYou did the {_name} for {_duration} seconds.");
	}

	public void Spinner(double time = 3.0){
		List<char> chars = new List<char>{'|', '/', '-', '\\'};
		for (double i = 0.0; i < time; i += .25){
			Console.Write($"\b{chars[(int)(i * 4) % 4]}");
			Thread.Sleep(250);
			Console.Write("\b \b");
		}
	}
			
}
public class BreathingActivity : Activity{
	public BreathingActivity(){
		_name = "Breathing Activity";
		_description = "This activity will help you relax by walking your through breathing in and out slowly. Clear your mind and focus on your breathing.";
		_duration = 0;
	}

        public void Breathe(int time = 3){
                for (int i = 0; i < time; i++){
                        Thread.Sleep(1000);
                        Console.WriteLine();
			if (i % 4 == 0 && time != 3)
				Console.WriteLine("Breath in...");
			if (i % 4 == 2 && time != 3)
				Console.WriteLine("Breath out...");
                }
                Console.WriteLine();
        }

	public void Run(){
		DisplayStartingMessage();
		Breathe(_duration);
		DisplayEndingMessage();
	}
}	
public class ListingActivity : Activity{
	public ListingActivity(){
                _name = "Listing Activity";
                _description = "This activity will help you reflect on the good things in your life by having you list as many things as you can in a certain area.";
                _duration = 0;
        }

	public void Countdown(int time = 3){
                for (int i = 0; i < time; i++){
                        Thread.Sleep(1000);
                        Console.Write($"\b{time - i - 1}");
                }
        }

        public void Run(){
                DisplayStartingMessage();
		DisplayRandomPrompt();
                Console.WriteLine("\nThink about the question for a few seconds.");
		Countdown(5);
		Console.WriteLine("\bList as many items as you can: ");
		List<string> answers = new List<string>();
		DateTime endTime = DateTime.Now.AddSeconds(_duration);
		while (DateTime.Now < endTime){
			Console.Write("> ");
			answers.Add(Console.ReadLine());
		}
		Console.WriteLine($"Well done: you listed {answers.Count} items.");
                DisplayEndingMessage();
        }

	public void DisplayRandomPrompt(){
		List<string> prompts = new List<string>{
			"Who are people that you appreciate?",
			"What are personal strengths of yours?",
			"Who are people that you have helped this week?",
			"When have you felt the Holy Ghost this month?",
			"Who are some of your personal heroes?"
		};
		Random random = new Random();
		Console.WriteLine(prompts[random.Next(0, prompts.Count)]);
	}

	
}
using System;

class Program{
    static void Main(string[] args){
        Console.WriteLine("Menu options:");
	Console.WriteLine("\t1. Breathing\n\t2. Reflection\n\t3. Listing\n\t4. Quit");
        Console.WriteLine("Select a choice from the menu:");
	switch (int.Parse(Console.ReadLine())){
		case 1:
			BreathingActivity breathing = new BreathingActivity();
			breathing.Run();
			break;
                case 2:
                        ReflectingActivity reflecting = new ReflectingActivity();
                        reflecting.Run();
                        break;
		case 3:
			ListingActivity listing = new ListingActivity();
			listing.Run();
			break;
		case 4:
			break;
		default:
			Console.WriteLine("Invalid option.");
			break;
	}
    }
}
public class ReflectingActivity : Activity{
	public ReflectingActivity(){
		_name = "Reflecting Activity";
		_description = "This activity will help you reflect on times in your life when you have shown strength and resilience. This will help you recognize the power you have and how you can use it in other aspects of your life.";
		_duration = 0;
	}

	public void Run(){
		DisplayStartingMessage();
		DisplayRandomPrompt();
		DisplayRandomQuestions();
		DisplayEndingMessage();
	}

	public void DisplayRandomPrompt(){
		List<string> prompts = new List<string>{
			"Think of a time when you stood up for someone else.",
			"Think of a time when you did something really difficult.",
			"Think of a time when you helped someone in need.",
			"Think of a time when you did something truly selfless.",
		};
		Random random = new Random();
		Console.WriteLine(prompts[random.Next(0, prompts.Count)]);
	}

        public void DisplayRandomQuestions(){
                List<string> questions = new List<string>{
			"Why was this experience meaningful to you?",
			"Have you ever done anything like this before?",
			"How did you get started?",
			"How did you feel when it was complete?",
			"What made this time different than other times when you were not as successful?",
			"What is your favorite thing about this experience?",
			"What could you learn from this experience that applies to other situations?",
			"What did you learn about yourself through this experience?",
			"How can you keep this experience in mind in the future?",
		};
		Random random = new Random();
		List<int> indeces = new List<int>();
		List<int> randomIndeces = new List<int>();
		for (int i = 0; i < questions.Count; i++)
			indeces.Add(i);
		for (int i = 0; i < questions.Count; i++){
			int a = random.Next(0, indeces.Count);
			indeces.RemoveAt(a);
			randomIndeces.Add(a);
		}
		Console.Clear();
		for (int i = 0; i < _duration && i < 90; i += 10){
			Console.WriteLine("\n" + questions[randomIndeces[i / 10]]);
			Spinner(10);
			Console.WriteLine("\b");
		}
	}
}
public class Activity{
	protected string _name;
	protected string _description;
	protected int _duration;

	public void DisplayStartingMessage(){
		Console.Clear();
		Console.WriteLine($"Welcome to the {_name}.\n{_description}\n");
		Console.Write("Activity length, seconds: ");
		_duration = int.Parse(Console.ReadLine());
		Console.Clear();
		Console.WriteLine("Prepare to begin!");
		Spinner(3);
		Console.WriteLine();
	}

	public void DisplayEndingMessage(){
		Console.WriteLine($"Done! Good job!");
		Spinner(3);
		Console.WriteLine($"\nYou did the {_name} for {_duration} seconds.");
	}

	public void Spinner(double time = 3.0){
		List<char> chars = new List<char>{'|', '/', '-', '\\'};
		for (double i = 0.0; i < time; i += .25){
			Console.Write($"\b{chars[(int)(i * 4) % 4]}");
			Thread.Sleep(250);
			Console.Write("\b \b");
		}
	}
	
	public abstract void Run(){
	}
}
public class BreathingActivity : Activity{
	public BreathingActivity(){
		_name = "Breathing Activity";
		_description = "This activity will help you relax by walking your through breathing in and out slowly. Clear your mind and focus on your breathing.";
		_duration = 0;
	}

        public void Breathe(int time = 3){
                for (int i = 0; i < time; i++){
                        Thread.Sleep(1000);
                        Console.WriteLine();
			if (i % 4 == 0 && time != 3)
				Console.WriteLine("Breath in...");
			if (i % 4 == 2 && time != 3)
				Console.WriteLine("Breath out...");
                }
                Console.WriteLine();
        }

	public void Run(){
		DisplayStartingMessage();
		Breathe(_duration);
		DisplayEndingMessage();
	}
}	
public class ListingActivity : Activity{
	public ListingActivity(){
                _name = "Listing Activity";
                _description = "This activity will help you reflect on the good things in your life by having you list as many things as you can in a certain area.";
                _duration = 0;
        }

	public void Countdown(int time = 3){
                for (int i = 0; i < time; i++){
                        Thread.Sleep(1000);
                        Console.Write($"\b{time - i - 1}");
                }
        }

        public void Run(){
                DisplayStartingMessage();
		DisplayRandomPrompt();
                Console.WriteLine("\nThink about the question for a few seconds.");
		Countdown(5);
		Console.WriteLine("\bList as many items as you can: ");
		List<string> answers = new List<string>();
		DateTime endTime = DateTime.Now.AddSeconds(_duration);
		while (DateTime.Now < endTime){
			Console.Write("> ");
			answers.Add(Console.ReadLine());
		}
		Console.WriteLine($"Well done: you listed {answers.Count} items.");
                DisplayEndingMessage();
        }

	public void DisplayRandomPrompt(){
		List<string> prompts = new List<string>{
			"Who are people that you appreciate?",
			"What are personal strengths of yours?",
			"Who are people that you have helped this week?",
			"When have you felt the Holy Ghost this month?",
			"Who are some of your personal heroes?"
		};
		Random random = new Random();
		Console.WriteLine(prompts[random.Next(0, prompts.Count)]);
	}

	
}
/* Reflecting Activity: does not duplicate random questions. */

using System;

class Program{
    static void Main(string[] args){
        Console.WriteLine("Menu options:");
	Console.WriteLine("\t1. Breathing\n\t2. Reflection\n\t3. Listing\n\t4. Quit");
        Console.WriteLine("Select a choice from the menu:");
	switch (int.Parse(Console.ReadLine())){
		case 1:
			BreathingActivity breathing = new BreathingActivity();
			breathing.Run();
			break;
                case 2:
                        ReflectingActivity reflecting = new ReflectingActivity();
                        reflecting.Run();
                        break;
		case 3:
			ListingActivity listing = new ListingActivity();
			listing.Run();
			break;
		case 4:
			break;
		default:
			Console.WriteLine("Invalid option.");
			break;
	}
    }
}
public class ReflectingActivity : Activity{
	public ReflectingActivity(){
		_name = "Reflecting Activity";
		_description = "This activity will help you reflect on times in your life when you have shown strength and resilience. This will help you recognize the power you have and how you can use it in other aspects of your life.";
		_duration = 0;
	}

	public void Run(){
		DisplayStartingMessage();
		DisplayRandomPrompt();
		DisplayRandomQuestions();
		DisplayEndingMessage();
	}

	public void DisplayRandomPrompt(){
		List<string> prompts = new List<string>{
			"Think of a time when you stood up for someone else.",
			"Think of a time when you did something really difficult.",
			"Think of a time when you helped someone in need.",
			"Think of a time when you did something truly selfless.",
		};
		Random random = new Random();
		Console.WriteLine(prompts[random.Next(0, prompts.Count)]);
	}

        public void DisplayRandomQuestions(){
                List<string> questions = new List<string>{
			"Why was this experience meaningful to you?",
			"Have you ever done anything like this before?",
			"How did you get started?",
			"How did you feel when it was complete?",
			"What made this time different than other times when you were not as successful?",
			"What is your favorite thing about this experience?",
			"What could you learn from this experience that applies to other situations?",
			"What did you learn about yourself through this experience?",
			"How can you keep this experience in mind in the future?",
		};
		Random random = new Random();
		List<int> indeces = new List<int>();
		List<int> randomIndeces = new List<int>();
		for (int i = 0; i < questions.Count; i++)
			indeces.Add(i);
		for (int i = 0; i < questions.Count; i++){
			int a = random.Next(0, indeces.Count);
			indeces.RemoveAt(a);
			randomIndeces.Add(a);
		}
		Console.Clear();
		for (int i = 0; i < _duration && i < 90; i += 10){
			Console.WriteLine("\n" + questions[randomIndeces[i / 10]]);
			Spinner(10);
			Console.WriteLine("\b");
		}
	}
}
